using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using UnityEngine;
using UnityEngine.Networking;


public class WebRequestManager : AutoGeneratedSingleton<WebRequestManager>
{
    private const string m_httpUrl = "http://localhost:8080/HotFixRes/";

    /// <summary>
    /// 请求下载 一个文件
    /// </summary>
    /// <param name="requestFile"></param>
    /// <param name="path"></param>
    /// <returns></returns>
    public IEnumerator CreateDownloadFileRequest(string requestFile, string path)
    {
        if (string.IsNullOrEmpty(requestFile) || string.IsNullOrEmpty(path))
        {
            yield break;
        }
        UnityWebRequest request = new UnityWebRequest($"{m_httpUrl}");
        request.method = UnityWebRequest.kHttpVerbGET;
        request.timeout = 5;
        request.SetRequestHeader("Content-File", requestFile);
        request.SetRequestHeader("Content-Platform", $"{GameConfigData.GetPlatformName()}");

        request.downloadHandler = new DownloadHandlerBuffer();
        yield return request.SendWebRequest();
        if (request.responseCode == 200)
        {
            //Dictionary<string, string> responseHeaders = request.GetResponseHeaders();
            string contentLength = request.GetResponseHeader("Content-Length");
            string disposition = request.GetResponseHeader("Content-disposition");
            string filePath = Path.Combine(path, requestFile);
            string[] desList = disposition.Split(';');
            for (int i = 0; i < desList.Length; i++)
            {
                if (desList[i].StartsWith("filename="))
                {
                    int index = filePath.LastIndexOf(desList[i].Substring(9), StringComparison.Ordinal);
                    string dirPath = filePath.Substring(0, index);
                    FileUtilities.IsExistsDirectory(dirPath);
                    break;
                }
            }
            Debug.Log($"[CreateDownloadFileRequest] {disposition}, ContentLength:{contentLength}, DownloadBytes:{request.downloadedBytes}");
            
            using (FileStream fs = new FileStream(filePath, FileMode.OpenOrCreate, FileAccess.ReadWrite))
            {
                fs.Seek(0, SeekOrigin.Begin);
                fs.SetLength(0);
                fs.Write(request.downloadHandler.data, 0, (int) request.downloadedBytes);
            }
        }
        else
        {
            string text = "Error: none";
            if (request.downloadHandler.data != null)
            {
                text = System.Text.Encoding.UTF8.GetString(request.downloadHandler.data);
            }

            Debug.Log($"ErrorCode:{request.responseCode}, Msg:{text}");
        }
    }
}