using HotFix_Project.ResourceLoaderCore;
using System.Collections;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.U2D;

namespace HotFix_Project
{
    public class GameController : Utils.AutoGeneratedSingleton<GameController>
    {
        private void BindingGo(GameObject go)
        {
            Debug.Log($"[BindingGo] : {go.name}");
        }

        public void Initialization()
        {
            SpriteAtlasManager.atlasRequested += OnAtlasRequested;

            HotFixMonoBehaviour.Instance.DoCoroutine(LoadEntryScene());
        }

        private IEnumerator LoadEntryScene()
        {
            Debug.Log("LoadEntryScene : Start GameEntry");
            yield return SceneManager.LoadSceneAsync("GameEntry");
            Debug.Log("LoadEntryScene : End GameEntry");
            yield return ResourceLoaderProxy.GetInstance().LoadUiAssetAsync<GameObject>("GameController", LoadAssetCallback);
        }

        private void LoadAssetCallback(bool success, GameObject obj)
        {
            if (success)
            {
                Debug.Log($"[LoadAssetCallback] : {success}");
                GameObject prefab = GameObject.Instantiate(obj);

                prefab.transform.SetParent(null);

                prefab.transform.localPosition = Vector3.zero;

                BindingGo(prefab);
            }
            else
            {
                // 资源加载失败
                Debug.LogError($"资源加载失败");
            }
        }



        private void OnAtlasRequested(string tag, System.Action<SpriteAtlas> callback)
        {
            Debug.Log($"[OnAtlasRequested] Tag: {tag}");
            ResourceLoaderProxy.GetInstance().LoadUiAssetAsync<SpriteAtlas>("GameController", (success, sprite) =>
            {
                if (success)
                {
                    callback(sprite);
                }
            });
        }

        protected override void DisposeManagedResources()
        {
            SpriteAtlasManager.atlasRequested -= OnAtlasRequested;
            base.DisposeManagedResources();
        }

    }
}
